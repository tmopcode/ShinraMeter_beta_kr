<ui:ClickThrouWindow x:Class="DamageMeter.UI.Skills"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:ui="clr-namespace:DamageMeter.UI"
                     xmlns:l="clr-namespace:Lang;assembly=Lang"
                     mc:Ignorable="d" Loaded="ClickThrouWindow_Loaded"
                     MinHeight="10" MinWidth="10"
                     Background="Transparent"
                     Title="Skills" d:DataContext="{d:DesignInstance ui:PlayerDamageViewModel}">
    <Window.Resources>
        <Style TargetType="{x:Type ToolTip}">
            <Setter Property="Background" Value="#8F000000" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock TextWrapping="Wrap" Text="{Binding}" MaxWidth="600" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border
                                Name="Border"
                                Margin="-2,0,0,-0"
                                Background="Transparent"
                                BorderThickness="0"
                                CornerRadius="0,0,0,0"
                                Cursor="Hand">
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Center"
                                                  ContentSource="Header"
                                                  Margin="12,2,12,2"
                                                  RecognizesAccessKey="True" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Border.Background"
                                        Value="{StaticResource DarkBackgroundColor}" />
                            </Trigger>
                            <Trigger SourceName="Border" Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Border.Background" Value="#2ddf" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="-2 0" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{StaticResource LightPrimaryText}" />

        </Style>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFFFFF" />
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#ACACAC" />
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="{StaticResource TabItem.Selected.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Selected.Border}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true"
                              KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" />
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                <RowDefinition x:Name="RowDefinition1" Height="*" />
                            </Grid.RowDefinitions>
                            <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true"
                                      Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" />
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" Grid.Column="0"
                                    KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1"
                                    KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"
                                                  Margin="{TemplateBinding Padding}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="1" />
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,0,2,2" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0" />
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="0" />
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="1" />
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                                <Setter Property="Margin" TargetName="headerPanel" Value="2,2,0,2" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="headerPanel" Value="0" />
                                <Setter Property="Grid.Row" TargetName="contentPanel" Value="0" />
                                <Setter Property="Grid.Column" TargetName="headerPanel" Value="1" />
                                <Setter Property="Grid.Column" TargetName="contentPanel" Value="0" />
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                                <Setter Property="Margin" TargetName="headerPanel" Value="0,2,2,2" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid MouseLeftButtonDown="Move"
          Margin="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=AllowsTransparency, Converter={StaticResource BoolToMargin}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.LayoutTransform>
            <ScaleTransform CenterX="0" CenterY="0"
                            ScaleX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=Scale}"
                            ScaleY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=Scale}" />
        </Grid.LayoutTransform>
        <Border Style="{StaticResource MainBorder}" Grid.RowSpan="2" />

        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Path Style="{StaticResource PathBaseStyle}"
                  Data="{Binding Class, Converter={StaticResource ClassToSvg}}"
                  Width="50" Height="50"
                  HorizontalAlignment="Left" />
            <TextBlock Text="{Binding Name, Mode=OneWay}"
                       Foreground="{StaticResource LightPrimaryText}"
                       FontSize="24" Grid.Column="1"
                       VerticalAlignment="Center" Margin="0 5 5 5" />

            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="2" Height="34"
                        Margin="20,0" VerticalAlignment="Center" HorizontalAlignment="Left" Width="Auto">
                <StackPanel.Resources>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="CornerRadius" Value="17" />
                        <Setter Property="Background" Value="{StaticResource DarkBackgroundColor}" />
                        <Setter Property="HorizontalAlignment" Value="Left" />
                        <Setter Property="Padding" Value="10,0" />
                        <Setter Property="Margin" Value="0,0,10,0" />
                        <Setter Property="MinWidth" Value="34" />
                        <Setter Property="MaxWidth" Value="100" />
                    </Style>
                    <Style TargetType="{x:Type StackPanel}">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Orientation" Value="Horizontal"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="MinHeight" Value="29"/>
                        <Setter Property="Height" Value="Auto"/>
                        <Setter Property="Focusable" Value="False"/>
                    </Style>
                    <Style TargetType="{x:Type Image}">
                        <Setter Property="Margin" Value="0 5 5 5" />
                    </Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="Foreground" Value="{StaticResource LightPrimaryText}" />
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="0 5 5 5" />
                    </Style>
                </StackPanel.Resources>
                <Border>
                    <StackPanel ToolTip="{x:Static l:LP.Deaths_Tooltip}">
                        <Image x:Name="DeathIcon" ToolTip="{Binding Source={x:Static l:LP.Deaths}, StringFormat= '\{0\}:'}"/>
                        <TextBlock x:Name="DeathCounter" />
                    </StackPanel>
                </Border>
                <Border>
                    <StackPanel ToolTip="{x:Static l:LP.Death_Time_Tooltip}">
                        <Image x:Name="DeathTimeIcon" ToolTip="{Binding Source={x:Static l:LP.Death_Time}, StringFormat= '\{0\}:'}" />
                        <TextBlock x:Name="DeathDuration" />
                    </StackPanel>
                </Border>
                <Border>
                    <StackPanel HorizontalAlignment="Left" ToolTip="{x:Static l:LP.Aggro_Tooltip}">
                        <Image x:Name="AggroIcon" ToolTip="{Binding Source={x:Static l:LP.Aggro}, StringFormat= '\{0\}:'}" />
                        <TextBlock x:Name="AggroCounter" />
                    </StackPanel>
                </Border>
                <Border>
                    <StackPanel HorizontalAlignment="Left" ToolTip="{x:Static l:LP.Aggro_Time_Tooltip}">
                        <Image x:Name="AggroTimeIcon" ToolTip="{Binding Source={x:Static l:LP.Aggro_Time}, StringFormat= '\{0\}:'}" />
                        <TextBlock x:Name="AggroDuration" />
                    </StackPanel>
                </Border>
            </StackPanel>
            <Button Grid.Row="0" Grid.Column="4" x:Name="CloseMeter" Style="{StaticResource ButtonMainStyle}"
                    Background="Transparent"
                    Command="{Binding CloseSkillDetailsCommand}"
                    HorizontalContentAlignment="Center"
                    VerticalAlignment="Top" Margin="0">
                <Path Data="{StaticResource Svg.Close}"
                      Fill="{StaticResource LightRed}"
                      Stretch="Uniform"
                      Margin="8" />
            </Button>
        </Grid>

        <TabControl Grid.Row="1" Background="{StaticResource DarkBackgroundColor}"
                    BorderThickness="0" x:Name="TabControl" Padding="-2 0">
            <TabItem Header="{x:Static l:LP.Dps}" x:Name="DpsPanel" />
            <TabItem Header="{x:Static l:LP.Heal}" x:Name="HealPanel" />
            <TabItem Header="{x:Static l:LP.Mana}" x:Name="ManaPanel" />
            <TabItem Header="{x:Static l:LP.Buff}" x:Name="BuffPanel" />
            <TabItem Header="{x:Static l:LP.Counter}" x:Name="CounterPanel" />
            <TabItem Header="{x:Static l:LP.SkillDealt}" x:Name="SkillsDealtPanel" />
            <TabItem Header="{x:Static l:LP.SkillReceived}" x:Name="SkillsReceivedPanel" />
        </TabControl>
    </Grid>
</ui:ClickThrouWindow>