<Window x:Class="DamageMeter.UI.Windows.SettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DamageMeter.UI.Windows"
        xmlns:lang="clr-namespace:Lang;assembly=Lang"
        xmlns:settings="clr-namespace:TCC.UI.Controls.Settings"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:teraDpsApi="clr-namespace:DamageMeter.TeraDpsApi;assembly=DamageMeter"
        xmlns:ui="clr-namespace:DamageMeter.UI"
        xmlns:settingsViews="clr-namespace:DamageMeter.UI.Windows.SettingsViews"
        xmlns:data="clr-namespace:Data;assembly=Data"
        xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:converters="clr-namespace:DamageMeter.UI.HUD.Converters"
        Background="{StaticResource DarkBackgroundColor}"
        WindowStyle="SingleBorderWindow"
        UseLayoutRounding="True"
        WindowStartupLocation="CenterScreen"
        KeyDown="OnKeyDown"
        KeyUp="OnKeyUp"
        mc:Ignorable="d"
        Title="SettingsWindow" Height="600" Width="800"
        d:DataContext="{d:DesignInstance local:SettingsWindowViewModel}">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0"
                      ResizeBorderThickness="0"
                      GlassFrameThickness="0 0 0 1"
                      CornerRadius="0" />
    </WindowChrome.WindowChrome>

    <Window.Resources>
        <Style TargetType="Button" BasedOn="{StaticResource ButtonMainStyle}">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Height" Value="40" />
        </Style>
        <Style TargetType="settings:CheckboxSetting" BasedOn="{StaticResource {x:Type settings:CheckboxSetting}}">
            <Setter Property="CheckboxSize" Value="14" />
            <Setter Property="Margin" Value="32 0 0 0" />
            <Setter Property="CheckBoxColor">
                <Setter.Value>
                    <SolidColorBrush x:Name="cb" Color="{Binding SelfColor}" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="settings:ValueSetting">
            <Setter Property="Height" Value="32" />
            <Setter Property="SliderColor1">
                <Setter.Value>
                    <SolidColorBrush x:Name="c1" Color="{Binding SelfColor}" Opacity=".8" />
                </Setter.Value>
            </Setter>
            <Setter Property="SliderColor2">
                <Setter.Value>
                    <SolidColorBrush x:Name="c2" Color="{Binding SelfColor}" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ToolTip}">
            <Setter Property="Background" Value="{StaticResource KrBorderColor}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock TextWrapping="Wrap" Text="{Binding}" MaxWidth="600" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="Foreground" Value="{StaticResource LightSecondaryText}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <ContentPresenter ContentSource="Header" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate x:Key="MockPlayer" DataType="local:MockPlayerViewModel">


            <Grid x:Name="root">
                <Border Focusable="False"
                        Opacity="1"
                        HorizontalAlignment="Left" VerticalAlignment="Stretch"
                        Height="Auto" Width="Auto">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0 1">
                            <GradientStop Color="{Binding Role, Converter={converters:RoleToColorConverter Opacity=0}}" />
                            <GradientStop
                                Color="{Binding Role, Converter={converters:RoleToColorConverter Opacity=.2}}"
                                Offset="1" />
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0 1">
                            <GradientStop Color="{Binding Role, Converter={converters:RoleToColorConverter Opacity=0}}"
                                          Offset=".6" />
                            <GradientStop
                                Color="{Binding Role, Converter={converters:RoleToColorConverter Opacity=.9}}"
                                Offset="1" />
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Grid>
                        <Border x:Name="IndicatorGovernor"
                                HorizontalAlignment="Left"
                                Width="{Binding ActualWidth, ElementName=root}">
                            <Border.LayoutTransform>
                                <ScaleTransform ScaleX="{Binding DamageFactor}" />
                            </Border.LayoutTransform>
                        </Border>
                        <Border Background="{Binding Role, Converter={converters:RoleToColorConverter}}"
                                VerticalAlignment="Bottom"
                                Height="1" />
                    </Grid>
                </Border>

                <Grid Focusable="False"
                      Height="30"
                      HorizontalAlignment="Left"
                      VerticalAlignment="Stretch">
                    <Grid.Resources>
                        <Style x:Key="MetricComboBox" TargetType="ComboBox"
                               BasedOn="{StaticResource {x:Type ComboBox}}">
                            <Setter Property="MinWidth" Value="10" />
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="HorizontalContentAlignment" Value="Left" />
                            <Setter Property="ItemsSource" Value="{Binding AvailableMetrics}" />
                            <Setter Property="ItemTemplate">
                                <Setter.Value>
                                    <DataTemplate DataType="data:Metric">
                                        <StackPanel HorizontalAlignment="Stretch">
                                            <TextBlock Text="{Binding Converter={StaticResource EnumDescriptionConverter}}" x:Name="MetricName"
                                                       Foreground="#5fff" Margin="0 2"></TextBlock>
                                            <ContentControl
                                                Content="{Binding DataContext, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}"
                                                ContentTemplate="{Binding Converter={StaticResource MetricTemplateSelector}}"
                                                HorizontalAlignment="Left" />
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ComboBoxItem}}, Path=IsSelected}" Value="{x:Null}">
                                                                        <Setter TargetName="MetricName" Property="Visibility" Value="Collapsed"/>
                                                                    </DataTrigger>
                                                                </DataTemplate.Triggers>

                                    </DataTemplate>

                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Grid.Resources>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition Width="85" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!--Class-->
                    <Path x:Name="Class"
                          Data="{Binding Class, Converter={StaticResource ClassToSvg}}"
                          Focusable="False"
                          Fill="#ddd"
                          RenderOptions.BitmapScalingMode="HighQuality"
                          Stretch="Uniform"
                          HorizontalAlignment="Center" VerticalAlignment="Center"
                          Height="18" Width="18"
                          Margin="2 0 0 0" />

                    <!--Name-->
                    <TextBlock
                        Grid.Column="1"
                        TextTrimming="CharacterEllipsis"
                        Margin="2 0 10 0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        Foreground="White">
                        <Run Text="{Binding Name, Mode=OneWay}" />
                        <Run Text="{Binding Level, Mode=OneWay}"
                             Foreground="#888"
                             FontSize="11" />
                    </TextBlock>
                    <ComboBox Grid.Column="2"
                              Style="{StaticResource MetricComboBox}"
                              SelectedItem="{Binding Metric1, Mode=TwoWay}" />
                    <ComboBox Grid.Column="3"
                              Style="{StaticResource MetricComboBox}"
                              SelectedItem="{Binding Metric2, Mode=TwoWay}" />
                    <ComboBox Grid.Column="4"
                              Style="{StaticResource MetricComboBox}"
                              SelectedItem="{Binding Metric3, Mode=TwoWay}" />
                    <ComboBox Grid.Column="5"
                              Style="{StaticResource MetricComboBox}"
                              SelectedItem="{Binding Metric4, Mode=TwoWay}" />
                    <ComboBox Grid.Column="6"
                              Style="{StaticResource MetricComboBox}"
                              SelectedItem="{Binding Metric5, Mode=TwoWay}" />
                </Grid>
            </Grid>
        </DataTemplate>

    </Window.Resources>
    <Grid Background="{StaticResource MainBgBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <!-- Title bar -->
        <Grid Background="#1000" MouseDown="Drag">
            <Path Data="{StaticResource Svg.Settings}"
                  Style="{StaticResource SmallButtonPathStyle}"
                  HorizontalAlignment="Left"
                  Opacity=".3"
                  Height="14"
                  Margin="13 0" />
            <Rectangle Width="1" Margin="40 5" Fill="#1fff" HorizontalAlignment="Left" />
            <TextBlock Text="Shinra Meter settings"
                       Foreground="#6fff"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Left"
                       Margin="50 0" />

            <Button HorizontalAlignment="Right"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Cursor="Arrow"
                    Height="30"
                    Width="30"
                    Click="CloseWindow">
                <Path Data="{StaticResource Svg.Close}"
                      Fill="{StaticResource LightRed}"
                      Stretch="Uniform"
                      Margin="8" />
            </Button>
        </Grid>

        <!-- Main content -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <TabControl SelectedIndex="{Binding SelectedIndex}"
                        TabStripPlacement="Left"
                        Background="Transparent"
                        Foreground="White"
                        BorderThickness="0"
                        Grid.ColumnSpan="2"
                        Margin="10 0 0 0"
                        Visibility="Visible"
                        VerticalAlignment="Center">
                <!--Home-->
                <TabItem>
                    <settingsViews:SettingsHomeView
                        MaxWidth="500" />
                </TabItem>
                <!--Detection-->
                <TabItem>

                    <StackPanel MaxWidth="500">
                        <settings:SelectionSetting SelectedItem="{Binding CaptureMode, Mode=TwoWay}"
                                                   SettingName="{x:Static lang:LP.CaptureMode}"
                                                   Choices="{x:Static local:SettingsWindowViewModel.CaptureModes}"
                                                   ChoicesType="{x:Type CaptureMode}" 
                                                   IsEnabled="{Binding CanChangeCaptureMode}"/>
                        <settings:CheckboxSetting IsOn="{Binding LowPriority, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.SystemTray_LowPriority}" />
                        <settings:CheckboxSetting IsOn="{Binding CountOnlyBosses, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.SystemTray_Count_only_bosses}" />
                        <settings:CheckboxSetting IsOn="{Binding DetectBossesByHpBar, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.SystemTray_Detect_bosses_by_HP_bar}" />
                        <settings:CheckboxSetting IsOn="{Binding CountOnlyPartyMembers, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.SystemTray_Count_only_party_members}" />
                        <settings:CheckboxSetting IsOn="{Binding IgnorePacketsThreshold, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.SystemTray_IgnorePacketsThreshold}" />
                        <settings:ValueSetting Value="{Binding ResetTimeout, Mode=TwoWay}"
                                               SettingName="{x:Static lang:LP.IdleResetTimeout}" Min="0" Max="600" />

                    </StackPanel>
                </TabItem>
                <!--UI-->
                <TabItem>
                    <StackPanel MaxWidth="500">
                        <settings:CheckboxSetting IsOn="{Binding AggroBasedTimer, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.Display_timer_aggro_or_firsthit}" />
                        <settings:CheckboxSetting IsOn="{Binding DisplayOnlyBossHitByMeterUser, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.Display_only_boss_hit_by_meter_user}" />
                        <settings:CheckboxSetting IsOn="{Binding ClickThru, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.SystemTray_Click_throu}" />
                        <settings:CheckboxSetting IsOn="{Binding InvisibleWhenNoStats, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.SystemTray_Invisible_when_no_stats}" />
                        <settings:CheckboxSetting IsOn="{Binding ShowAlways, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.SystemTray_Show_always}" />
                        <settings:CheckboxSetting IsOn="{Binding StayTopmost, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.SystemTray_Stay_topmost}" />
                        <settings:CheckboxSetting IsOn="{Binding SnapToBorders, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.SystemTray_SnapToBorders}" />
                        <settings:CheckboxSetting IsOn="{Binding ShowSelfOnTop, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.ShowSelfOnTop}" />
                        <settings:CheckboxSetting IsOn="{Binding FullscreenOverlay, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.EnableOverlay}" IsEnabled="False" 
                                                  Visibility="Collapsed"/>
                        <settings:ValueSetting Value="{Binding NumberOfPlayersDisplayed, Mode=TwoWay}"
                                               SettingName="{x:Static lang:LP.NumberPlayersDisplayed}" Min="1" Max="30" />
                        <settings:ValueSetting Value="{Binding MainWindowOpacity, Mode=TwoWay}"
                                               SettingName="{x:Static lang:LP.SystemTray_MainWindowOpacity}"
                                               Min="0" Max="1" />
                        <settings:ValueSetting Value="{Binding OtherWindowsOpacity, Mode=TwoWay}"
                                               SettingName="{x:Static lang:LP.SystemTray_OtherWindowOpacity}"
                                               Min="0.1" Max="1" />
                        <settings:ValueSetting Value="{Binding Scale, Mode=TwoWay}" SettingName="Scale" Min="0" Max="5" />
                        <Grid Margin="35 10 0 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Separator Grid.Column="0" Opacity=".2" />
                            <TextBlock Grid.Column="1" Text="Colors" Margin="10 0" Foreground="#3fff" />
                            <Separator Grid.Column="2" Opacity=".2" />
                        </Grid>
                        <UniformGrid Rows="1" Margin="28 0 0 0">
                            <local:ColorSetting SettingName="Background"
                                                SelectedColor="{Binding BackgroundColor, Mode=TwoWay}"
                                                DefaultColor="{x:Static data:WindowData.DefaultBackgroundColor}" />
                            <local:ColorSetting SettingName="Border" SelectedColor="{Binding BorderColor, Mode=TwoWay}"
                                                DefaultColor="{x:Static data:WindowData.DefaultBorderColor}" />
                            <local:ColorSetting SettingName="Player" SelectedColor="{Binding SelfColor, Mode=TwoWay}"
                                                DefaultColor="{x:Static data:WindowData.DefaultPlayerColor}" />
                        </UniformGrid>

                    </StackPanel>
                </TabItem>
                <!--Layout-->
                <TabItem>
                    <StackPanel HorizontalAlignment="Center">
                        <StackPanel.Resources>
                            <Style x:Key="MockBrderStyle" TargetType="Border">
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="Effect" Value="{StaticResource MenuShadow-8dp}" />
                                <Setter Property="Margin" Value="0 20" />
                                <Setter Property="HorizontalAlignment" Value="Left" />
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding BackgroundColor}" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="BorderBrush">
                                    <Setter.Value>
                                        <SolidColorBrush Color="{Binding BorderColor}" />
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </StackPanel.Resources>
                        <StackPanel Orientation="Horizontal">

                            <Border Style="{StaticResource MockBrderStyle}">
                                <ContentControl Content="{Binding MockParty[0]}"
                                                ContentTemplate="{StaticResource MockPlayer}" />

                            </Border>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">

                            <Border Style="{StaticResource MockBrderStyle}">
                                <ContentControl Content="{Binding MockParty[1]}"
                                                ContentTemplate="{StaticResource MockPlayer}" />
                            </Border>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal">

                            <Border Style="{StaticResource MockBrderStyle}">
                                <ContentControl Content="{Binding MockParty[2]}"
                                                ContentTemplate="{StaticResource MockPlayer}" />
                            </Border>
                        </StackPanel>

                        <UniformGrid Rows="1" HorizontalAlignment="Center">
                            <local:ColorSetting SettingName="" SelectedColor="{Binding DpsColor, Mode=TwoWay}"
                                                DefaultColor="{x:Static data:WindowData.DefaultDpsColor}" />
                            <local:ColorSetting SettingName="" SelectedColor="{Binding TankColor, Mode=TwoWay}"
                                                DefaultColor="{x:Static data:WindowData.DefaultTankColor}" />
                            <local:ColorSetting SettingName="" SelectedColor="{Binding HealerColor, Mode=TwoWay}"
                                                DefaultColor="{x:Static data:WindowData.DefaultHealerColor}" />


                        </UniformGrid>
                    </StackPanel>
                </TabItem>
                <!--TTS-->
                <TabItem >
                    <StackPanel MaxWidth="500">
                        <settings:CheckboxSetting IsOn="{Binding TtsMessagesTruncate, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.TTSSizeExceededTruncate}" />
                        <settings:ValueSetting Value="{Binding TtsMaxSize, Mode=TwoWay}"
                                               SettingName="{x:Static lang:LP.MaxTTSSize}"
                                               Min="10" Max="200"
                                               IsEnabled="{Binding TtsMessagesTruncate}" />
                    </StackPanel>
                </TabItem>
                <!--HP bar-->
                <TabItem>
                    <StackPanel MaxWidth="500">
                        <settings:CheckboxSetting IsOn="{Binding BossGageVisible, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.ShowBossGage}" />
                        <settings:CheckboxSetting IsOn="{Binding BossGageAbnormalsDisabled, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.NoAbnormalsInHUD}"
                                                  IsEnabled="{Binding BossGageVisible}" />
                    </StackPanel>
                </TabItem>
                <!--Graph-->
                <TabItem>
                    <StackPanel MaxWidth="500">
                        <settings:CheckboxSetting IsOn="{Binding RealtimeGraphEnabled, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.EnableRealtimeGraph}" />
                        <settings:SelectionSetting SelectedItem="{Binding GraphMode, Mode=TwoWay}"
                                                   SettingName="{x:Static lang:LP.RealtimeGraphMode}"
                                                   Choices="{x:Static local:SettingsWindowViewModel.GraphModes}"
                                                   ChoicesType="{x:Type data:GraphMode}"
                                                   IsEnabled="{Binding RealtimeGraphEnabled}" />

                        <settings:ValueSetting Value="{Binding RealtimeGraphDisplayedInterval, Mode=TwoWay}"
                                               SettingName="{x:Static lang:LP.RealtimeGraphDisplayedInterval}" Min="0"
                                               Max="600"
                                               IsEnabled="{Binding RealtimeGraphEnabled}" />
                        <settings:ValueSetting Value="{Binding RealtimeGraphCMAseconds, Mode=TwoWay}"
                                               SettingName="{x:Static lang:LP.RealtimeGraphCmaSeconds}" Min="1"
                                               Max="60">
                            <settings:ValueSetting.Style>
                                <Style TargetType="settings:ValueSetting"
                                       BasedOn="{StaticResource {x:Type settings:ValueSetting}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding GraphMode}" Value="DPS">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding RealtimeGraphEnabled}" Value="False">
                                            <Setter Property="IsEnabled" Value="False" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </settings:ValueSetting.Style>

                        </settings:ValueSetting>
                        <settings:CheckboxSetting IsOn="{Binding RealtimeGraphAnimated, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.RealtimeGraphAnimated}"
                                                  IsEnabled="{Binding RealtimeGraphEnabled}" />

                    </StackPanel>
                </TabItem>
                <!--Servers-->
                <TabItem>
                    <TabItem.Resources>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="HorizontalAlignment" Value="Stretch" />
                            <Setter Property="Padding" Value="0 0 0 2" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Grid Background="Transparent" Margin="{TemplateBinding Padding}">

                                            <Rectangle x:Name="hl" Fill="#1fff" Opacity="0" IsHitTestVisible="False" />
                                            <Rectangle x:Name="alt" Fill="#1779" Opacity="0" IsHitTestVisible="False" />
                                            <ContentPresenter Margin="0" />
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <!--<Setter Property="Opacity" TargetName="hl" Value="1" />-->
                                            </Trigger>
                                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                                <Setter Property="Opacity" TargetName="alt" Value="0" />
                                            </Trigger>
                                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                                <Setter Property="Opacity" TargetName="alt" Value="1" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TabItem.Resources>
                    <Grid MaxWidth="500">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ListBox ScrollViewer.CanContentScroll="False" ItemsSource="{Binding DpsServers}"
                                 Background="Transparent" BorderThickness="0">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="teraDpsApi:DpsServer">
                                    <ui:DpsServer />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ListBox>
                        <Separator Grid.Row="1" VerticalAlignment="Top" Margin="-20 2" Opacity=".2" />
                        <Button Grid.Row="1" Command="{Binding AddServerCommand}" VerticalAlignment="Center"
                                VerticalContentAlignment="Center"
                                HorizontalContentAlignment="Center"
                                Margin="0 8">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Path Fill="White" Stretch="Uniform" Width="16" Height="16"
                                      Margin="8 0"
                                      Data="{StaticResource Svg.AddServer}" />
                                <TextBlock Grid.Column="1" Text="{x:Static lang:LP.SystemTray_AddServer}"
                                           VerticalAlignment="Center" />
                            </Grid>
                        </Button>
                    </Grid>
                </TabItem>
                <!--Events-->
                <TabItem>
                    <StackPanel MaxWidth="500">
                        <settings:CheckboxSetting IsOn="{Binding EnableChatAndNotif, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.EnableChat}" />
                        <settings:CheckboxSetting IsOn="{Binding AutoDisableChatWhenOverloaded, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.AutoDisableChatWhenOverloaded}"
                                                  IsEnabled="{Binding EnableChatAndNotif}" />
                        <settings:CheckboxSetting IsOn="{Binding MuteSound, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.MuteSound}"
                                                  IsEnabled="{Binding EnableChatAndNotif}" />
                        <settings:CheckboxSetting IsOn="{Binding CopyInspectOnApply, Mode=TwoWay}"
                                                  IsEnabled="{Binding EnableChatAndNotif}"
                                                  SettingName="{x:Static lang:LP.CopyInspect}" />
                        <settings:CheckboxSetting IsOn="{Binding DisablePartyEvents, Mode=TwoWay}"
                                                  IsEnabled="{Binding EnableChatAndNotif}"
                                                  SettingName="{x:Static lang:LP.DisablePartyEvents}" />
                        <settings:CheckboxSetting IsOn="{Binding ShowAfkEventsIngame, Mode=TwoWay}"
                                                  IsEnabled="{Binding EnableChatAndNotif}"
                                                  SettingName="{x:Static lang:LP.ShowAfkEventsIngame}" />
                        <!--<Button Content="Edit events..." VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                VerticalContentAlignment="Center"
                                HorizontalContentAlignment="Center"
                                Padding="10 0" Command="{Binding OpenEventEditorCommand}"/>-->
                    </StackPanel>
                </TabItem>
                <!--Rich presence-->
                <TabItem>
                    <StackPanel MaxWidth="500">
                        <settings:CheckboxSetting IsOn="{Binding RichPresenceEnable, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.EnableRp}" />
                        <settings:CheckboxSetting IsOn="{Binding RichPresenceShowLocation, Mode=TwoWay}"
                                                  IsEnabled="{Binding RichPresenceEnable}"
                                                  SettingName="{x:Static lang:LP.RichPresenceShowLocation}" />
                        <settings:CheckboxSetting IsOn="{Binding RichPresenceShowCharacter, Mode=TwoWay}"
                                                  IsEnabled="{Binding RichPresenceEnable}"
                                                  SettingName="{x:Static lang:LP.RichPresenceShowCharacter}" />
                        <settings:CheckboxSetting IsOn="{Binding RichPresenceShowStatus, Mode=TwoWay}"
                                                  IsEnabled="{Binding RichPresenceEnable}"
                                                  SettingName="{x:Static lang:LP.RichPresenceShowStatus}" />
                        <settings:CheckboxSetting IsOn="{Binding RichPresenceShowParty, Mode=TwoWay}"
                                                  IsEnabled="{Binding RichPresenceEnable}"
                                                  SettingName="{x:Static lang:LP.RichPresenceShowParty}" />

                    </StackPanel>
                </TabItem>
                <!--Chat colors-->
                <TabItem>
                    <UniformGrid Columns="2" Margin="23 3 3 3" x:Name="ColorSettingsContainer" VerticalAlignment="Top" MaxWidth="500">
                        <UniformGrid.Resources>
                            <ResourceDictionary Source="../Controls/ColorPickerStyle.xaml" />
                        </UniformGrid.Resources>

                        <Grid HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" Name="SayColor" VerticalAlignment="Center"
                                       Style="{StaticResource DefaultTextStyle}"
                                       Text="{x:Static lang:LP.SayColor}" />
                            <xctk:ColorPicker HorizontalAlignment="Right" Width="Auto" VerticalAlignment="Center"
                                              DisplayColorAndName="False" Name="SayColorSelecter"
                                              Margin="5" Grid.Column="0"
                                              BorderBrush="Transparent" BorderThickness="0"
                                              Background="Transparent" ShowDropDownButton="False"
                                              SelectedColor="{Binding ChatSay}"
                                              ColorMode="ColorCanvas" />
                        </Grid>
                        <Grid HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" Name="EmotesColor" VerticalAlignment="Center"
                                       Style="{StaticResource DefaultTextStyle}"
                                       Text="{x:Static lang:LP.EmotesColor}" />
                            <xctk:ColorPicker HorizontalAlignment="Right" Width="Auto" VerticalAlignment="Center"
                                              DisplayColorAndName="False" Name="EmotesColorSelecter"
                                              Margin="5" Grid.Column="0"
                                              BorderBrush="Transparent" BorderThickness="0"
                                              Background="Transparent" ShowDropDownButton="False"
                                              SelectedColor="{Binding ChatEmotes}"
                                              ColorMode="ColorCanvas" />
                        </Grid>

                        <Grid HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" Name="GeneralColor" VerticalAlignment="Center"
                                       Style="{StaticResource DefaultTextStyle}"
                                       Text="{x:Static lang:LP.GeneralColor}" />
                            <xctk:ColorPicker HorizontalAlignment="Right" Width="Auto" VerticalAlignment="Center"
                                              DisplayColorAndName="False" Name="GeneralColorSelecter"
                                              Margin="5" Grid.Column="0"
                                              BorderBrush="Transparent" BorderThickness="0"
                                              Background="Transparent" ShowDropDownButton="False"
                                              SelectedColor="{Binding ChatGeneral}"
                                              ColorMode="ColorCanvas" />
                        </Grid>
                        <Grid HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" Name="TradingColor" VerticalAlignment="Center"
                                       Style="{StaticResource DefaultTextStyle}"
                                       Text="{x:Static lang:LP.TradingColor}" />
                            <xctk:ColorPicker HorizontalAlignment="Right" Width="Auto" VerticalAlignment="Center"
                                              DisplayColorAndName="False" Name="TradingColorSelecter"
                                              Margin="5" Grid.Column="0"
                                              BorderBrush="Transparent" BorderThickness="0"
                                              Background="Transparent" ShowDropDownButton="False"
                                              SelectedColor="{Binding ChatTrade}"
                                              ColorMode="ColorCanvas" />
                        </Grid>

                        <Grid HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" Name="GroupColor" VerticalAlignment="Center"
                                       Style="{StaticResource DefaultTextStyle}"
                                       Text="{x:Static lang:LP.GroupColor}" />
                            <xctk:ColorPicker HorizontalAlignment="Right" Width="Auto" VerticalAlignment="Center"
                                              DisplayColorAndName="False" Name="GroupColorSelecter"
                                              Margin="5" Grid.Column="0"
                                              BorderBrush="Transparent" BorderThickness="0"
                                              Background="Transparent" ShowDropDownButton="False"
                                              SelectedColor="{Binding ChatGroup}"
                                              ColorMode="ColorCanvas" />
                        </Grid>
                        <Grid HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" Name="RaidColor" VerticalAlignment="Center"
                                       Style="{StaticResource DefaultTextStyle}"
                                       Text="{x:Static lang:LP.RaidColor}" />
                            <xctk:ColorPicker HorizontalAlignment="Right" Width="Auto" VerticalAlignment="Center"
                                              DisplayColorAndName="False" Name="RaidColorSelecter"
                                              Margin="5" Grid.Column="0"
                                              BorderBrush="Transparent" BorderThickness="0"
                                              Background="Transparent" ShowDropDownButton="False"
                                              SelectedColor="{Binding ChatRaid}"
                                              ColorMode="ColorCanvas" />
                        </Grid>

                        <Grid HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" Name="GuildColor" VerticalAlignment="Center"
                                       Style="{StaticResource DefaultTextStyle}"
                                       Text="{x:Static lang:LP.GuildColor}" />
                            <xctk:ColorPicker HorizontalAlignment="Right" Width="Auto" VerticalAlignment="Center"
                                              DisplayColorAndName="False" Name="GuildColorSelecter"
                                              Margin="5" Grid.Column="0"
                                              BorderBrush="Transparent" BorderThickness="0"
                                              Background="Transparent" ShowDropDownButton="False"
                                              SelectedColor="{Binding ChatGuild}"
                                              ColorMode="ColorCanvas" />
                        </Grid>
                        <Grid HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" Name="WhisperColor" VerticalAlignment="Center"
                                       Style="{StaticResource DefaultTextStyle}"
                                       Text="{x:Static lang:LP.WhisperColor}" />
                            <xctk:ColorPicker HorizontalAlignment="Right" Width="Auto" VerticalAlignment="Center"
                                              DisplayColorAndName="False" Name="WhisperColorSelecter"
                                              Margin="5" Grid.Column="0"
                                              BorderBrush="Transparent" BorderThickness="0"
                                              Background="Transparent" ShowDropDownButton="False"
                                              SelectedColor="{Binding ChatWhisper}"
                                              ColorMode="ColorCanvas" />
                        </Grid>
                        <Grid HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" Name="AreaColor" VerticalAlignment="Center"
                                       Style="{StaticResource DefaultTextStyle}"
                                       Text="{x:Static lang:LP.AreaColor}" />
                            <xctk:ColorPicker HorizontalAlignment="Right" Width="Auto" VerticalAlignment="Center"
                                              DisplayColorAndName="False" Name="AreaColorSelecter"
                                              Margin="5" Grid.Column="0"
                                              BorderBrush="Transparent" BorderThickness="0"
                                              Background="Transparent" ShowDropDownButton="False"
                                              SelectedColor="{Binding ChatArea}"
                                              ColorMode="ColorCanvas" />
                        </Grid>
                        <Grid HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" Name="PrivateChannelColor" VerticalAlignment="Center"
                                       Style="{StaticResource DefaultTextStyle}"
                                       Text="{x:Static lang:LP.PrivateChannelColor}" />
                            <xctk:ColorPicker HorizontalAlignment="Right" Width="Auto" VerticalAlignment="Center"
                                              DisplayColorAndName="False"
                                              Name="PrivateChannelColorSelecter" Margin="5"
                                              Grid.Column="0"
                                              BorderBrush="Transparent" BorderThickness="0"
                                              Background="Transparent" ShowDropDownButton="False"
                                              SelectedColor="{Binding ChatPrivate}"
                                              ColorMode="ColorCanvas" />
                        </Grid>
                        <!--<Grid HorizontalAlignment="Left">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="1" Name="AllianceColor" VerticalAlignment="Center"
                                   Style="{StaticResource DefaultTextStyle}"
                                   Text="{x:Static lang:LP.AllianceColor}" />
                            <xctk:ColorPicker HorizontalAlignment="Right" Width="Auto" VerticalAlignment="Center"
                                          DisplayColorAndName="False" Name="AllianceColorSelecter"
                                          Margin="5" Grid.Column="0"
                                          BorderBrush="Transparent" BorderThickness="0"
                                          Background="Transparent" ShowDropDownButton="False"
                                          SelectedColor="{Binding ChatAlliance}"
                                          ColorMode="ColorCanvas" />
                        </Grid>-->

                        <UniformGrid.LayoutTransform>
                            <ScaleTransform ScaleY="1" />
                        </UniformGrid.LayoutTransform>
                    </UniformGrid>

                </TabItem>
                <!--Misc-->
                <TabItem>
                    <StackPanel MaxWidth="500">
                        <settings:CheckboxSetting IsOn="{Binding ExportPacketLogs, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.ExportPacketLogs}" />
                        <settings:CheckboxSetting IsOn="{Binding ExcelAutoExport, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.SystemTray_Autoexport_to_Excel}" />
                        <settings:CheckboxSetting IsOn="{Binding JsonAutoExport, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.SystemTray_Autoexport_to_Json}" />
                        <settings:ValueSetting Value="{Binding ExcelCmaSeconds, Mode=TwoWay}"
                                               SettingName="{x:Static lang:LP.SystemTray_ExcelCMADPSSeconds}"
                                               Min="1"
                                               Max="60" />
                    </StackPanel>
                </TabItem>
                <!--Hotkeys-->
                <TabItem>
                    <StackPanel MaxWidth="500">
                        <settings:CheckboxSetting IsOn="{Binding RemoveAltEnter, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.RemoveTeraAltEnterHotkey}" />
                        <settings:CheckboxSetting IsOn="{Binding FormatPasteString, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.FormatPasteString}" />
                        <settings:CheckboxSetting IsOn="{Binding DisableIngameChatPaste, Mode=TwoWay}"
                                                  SettingName="{x:Static lang:LP.NoPaste}" />
                        <settings:ValueSetting Value="{Binding PasteDelay, Mode=TwoWay}"
                                               SettingName="{x:Static lang:LP.DelayToWaitPasting}" Min="0" Max="600" />
                        <Separator Opacity=".2" />

                        <settings:HotkeySetting SettingName="Topmost"
                                                Value="{Binding TopmostHotkey, Mode=TwoWay}" />
                        <settings:HotkeySetting SettingName="Click through"
                                                Value="{Binding ClickThrouHotkey, Mode=TwoWay}" />
                        <settings:HotkeySetting SettingName="Paste"
                                                Value="{Binding PasteHotkey, Mode=TwoWay}" />
                        <settings:HotkeySetting SettingName="Excel save"
                                                Value="{Binding ExcelSaveHotkey, Mode=TwoWay}" />
                        <settings:HotkeySetting SettingName="Reset"
                                                Value="{Binding ResetHotkey, Mode=TwoWay}" />
                        <settings:HotkeySetting SettingName="Reset current"
                                                Value="{Binding ResetCurrentHotkey, Mode=TwoWay}" />
                        <Separator Opacity=".2" />
                        <ItemsControl ItemsSource="{Binding CopyKeys}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="local:CopyKeyVM">
                                    <settings:HotkeySetting SettingName="{Binding Name}"
                                                            Value="{Binding HotKey, Mode=TwoWay}"
                                                            ToolTip="{Binding Preview}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </TabItem>
            </TabControl>
            <Border Background="#2d3438" Width="40" HorizontalAlignment="Left" x:Name="SliderBackgroundBorder"
                    Opacity="1">
                <Border.Effect>
                    <DropShadowEffect Opacity="0" Color="#292F33" RenderingBias="Performance" BlurRadius="20"
                                      ShadowDepth="10"
                                      Direction="0" />
                </Border.Effect>

            </Border>

            <Rectangle Fill="Transparent"
                       MouseEnter="ActivatorOnMouseEnter"
                       MouseLeave="ActivatorOnMouseLeave"
                       Width="40" HorizontalAlignment="Left"
                       VerticalAlignment="Stretch" x:Name="SliderActivator" />
            <Rectangle Fill="White" Width="40" Margin="-500 0 0 0" Grid.ColumnSpan="2"
                       x:Name="OpacityMaskRect"
                       HorizontalAlignment="Left"
                       UseLayoutRounding="True" SnapsToDevicePixels="True">
                <Rectangle.RenderTransform>
                    <ScaleTransform ScaleX="1" />
                </Rectangle.RenderTransform>
            </Rectangle>
            <Grid x:Name="Slider" IsHitTestVisible="False"
                  MouseLeave="ActivatorOnMouseLeave">
                <Grid.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=OpacityMaskRect}" Stretch="None" AlignmentX="Left" />
                </Grid.OpacityMask>

                <Rectangle Width="3" x:Name="SelRect"
                           HorizontalAlignment="Left" Height="40" VerticalAlignment="Top">
                    <Rectangle.Fill>
                        <SolidColorBrush x:Name="sc" Color="{Binding SelfColor}" />
                    </Rectangle.Fill>
                    <Rectangle.RenderTransform>
                        <TranslateTransform />
                    </Rectangle.RenderTransform>
                </Rectangle>

                <StackPanel x:Name="SliderButtonsContainer">
                    <StackPanel.Resources>
                        <Style TargetType="Button" x:Key="s" BasedOn="{StaticResource {x:Type Button}}">
                            <EventSetter Event="Click" Handler="OnSliderButtonClick" />
                            <Setter Property="Command" Value="{Binding SetViewCommand}" />
                        </Style>
                    </StackPanel.Resources>
                    <local:SliderButton Style="{StaticResource s}" CommandParameter="0"
                                        SvgIcon="{StaticResource Svg.Home}" Label="{x:Static lang:LP.SettingsTab_Home}" />
                    <local:SliderButton Style="{StaticResource s}" CommandParameter="1"
                                        SvgIcon="{StaticResource Svg.Detection}"
                                        Label="{x:Static lang:LP.SettingsTab_Detection}" />
                    <local:SliderButton Style="{StaticResource s}" CommandParameter="2"
                                        SvgIcon="{StaticResource Svg.UI}" Label="{x:Static lang:LP.SettingsTab_UI}" />
                    <local:SliderButton Style="{StaticResource s}" CommandParameter="3"
                                        SvgIcon="{StaticResource Svg.Layout}"
                                        Label="{x:Static lang:LP.SettingsTab_Layout}" />
                    <local:SliderButton Style="{StaticResource s}" CommandParameter="4"
                                        SvgIcon="{StaticResource Svg.TTS}" Label="{x:Static lang:LP.SettingsTab_TTS}" />
                    <local:SliderButton Style="{StaticResource s}" CommandParameter="5"
                                        SvgIcon="{StaticResource Svg.HPBar}"
                                        Label="{x:Static lang:LP.SettingsTab_HPBar}" />
                    <local:SliderButton Style="{StaticResource s}" CommandParameter="6"
                                        SvgIcon="{StaticResource Svg.Graph}"
                                        Label="{x:Static lang:LP.SettingsTab_Graph}" />
                    <local:SliderButton Style="{StaticResource s}" CommandParameter="7"
                                        SvgIcon="{StaticResource Svg.Servers}"
                                        Label="{x:Static lang:LP.SettingsTab_Servers}" />
                    <local:SliderButton Style="{StaticResource s}" CommandParameter="8"
                                        SvgIcon="{StaticResource Svg.Events}"
                                        Label="{x:Static lang:LP.SettingsTab_Events}" />
                    <local:SliderButton Style="{StaticResource s}" CommandParameter="9"
                                        SvgIcon="{StaticResource Svg.Discord}"
                                        Label="{x:Static lang:LP.SettingsTab_DiscordRP}" />
                    <local:SliderButton Style="{StaticResource s}" CommandParameter="10"
                                        SvgIcon="{StaticResource Svg.ChatColors}"
                                        Label="{x:Static lang:LP.SettingsTab_ChatColors}" />
                    <local:SliderButton Style="{StaticResource s}" CommandParameter="11"
                                        SvgIcon="{StaticResource Svg.Misc}" Label="{x:Static lang:LP.SettingsTab_Misc}" />
                    <local:SliderButton Style="{StaticResource s}" CommandParameter="12"
                                        SvgIcon="{StaticResource Svg.Hotkeys}"
                                        Label="{x:Static lang:LP.SettingsTab_Input}" />
                </StackPanel>
            </Grid>
        </Grid>

        <!--Toast-->
        <local:ToastControl Grid.RowSpan="3" Width="Auto"
                            DataContext="{Binding ToastData}"
                            ToastText="{Binding Text}"
                            ToastSeverity="{Binding Severity}"
                            IsShowed="{Binding Visible}"
                            Foreground="White"
                            Effect="{StaticResource MenuShadow-8dp}"
                            CornerRadius="5"
                            SlideOffset="-30"
                            FontSize="14"
                            FontWeight="DemiBold"
                            HorizontalAlignment="Center" VerticalAlignment="Top"
                            Margin="70" />

        <Grid Grid.Row="2" Background="#1000">
            <StackPanel Orientation="Horizontal" VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Opacity=".5">
                <Path Data="{StaticResource Svg.Info}" Margin="6"
                      Style="{StaticResource PathBaseStyle}" Opacity=".4" />
                <TextBlock Text="Settings are saved when closing this window and when closing meter"
                           Style="{StaticResource DefaultTextStyle}"
                           VerticalAlignment="Center" />
            </StackPanel>
        </Grid>
    </Grid>
</Window>