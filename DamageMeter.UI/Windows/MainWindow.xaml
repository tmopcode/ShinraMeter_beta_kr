<ui:ClickThrouWindow x:Class="DamageMeter.UI.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:ui="clr-namespace:DamageMeter.UI"
                     xmlns:controls="clr-namespace:DamageMeter.UI.Controls"
                     xmlns:windows="clr-namespace:DamageMeter.UI.Windows"
                     xmlns:l="clr-namespace:Lang;assembly=Lang"
                     xmlns:extensions="clr-namespace:Nostrum.Extensions;assembly=Nostrum"
                     xmlns:game="clr-namespace:Tera.Game;assembly=Tera.Core"
                     xmlns:converters="clr-namespace:DamageMeter.UI.HUD.Converters"
                     xmlns:hud="clr-namespace:DamageMeter.UI.HUD"
                     xmlns:nostrum="clr-namespace:Nostrum.Converters;assembly=Nostrum"
                     mc:Ignorable="d"
                     UseLayoutRounding="True"
                     Icon="{Binding WindowIcon}"
                     Title="{Binding WindowTitle}"
                     Background="#01000000"
                     MinHeight="60"
                     SizeToContent="WidthAndHeight"
                     MinWidth="219"
                     Loaded="MainWindow_OnLoaded"
                     Closed="MainWindow_OnClosed"
                     MouseEnter="MainWindow_OnMouseEnter"
                     MouseLeave="MainWindow_OnMouseLeave"
                     d:DataContext="{d:DesignInstance ui:MainViewModel}">
    <Window.Resources>
        <Style x:Key="EmptyModeButtonPathStyle" TargetType="Path" BasedOn="{StaticResource PathBaseStyle}">
            <Setter Property="Height" Value="19" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Width" Value="Auto" />
        </Style>
        <Style x:Key="FooterButtonPathStyle" TargetType="Path" BasedOn="{StaticResource PathBaseStyle}">
            <Setter Property="Margin" Value="3" />
        </Style>
        <Style x:Key="GeneralStatPathStyle" TargetType="Path" BasedOn="{StaticResource PathBaseStyle}">
            <Setter Property="Margin" Value="0 0 0 -3" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Fill" Value="#5fff" />
            <Setter Property="Height" Value="14" />
            <Setter Property="Width" Value="14" />
        </Style>
        <Style x:Key="GeneralStatTextStyle" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Focusable" Value="False" />
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="Margin" Value="5 3" />
            <Setter Property="FontSize" Value="13" />
        </Style>
        <Style x:Key="FooterButtonSvgLedStyle" TargetType="windows:SvgLed">
            <Setter Property="Margin" Value="3" />
            <Setter Property="OnBrush" Value="White" />
            <Setter Property="OffBrush" Value="White" />
        </Style>
        <Style x:Key="EmptyModeButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonMainStyle}">
            <Setter Property="extensions:ButtonExtensions.CornerRadius" Value="18" />
            <Setter Property="Height" Value="36" />
            <Setter Property="Width" Value="36" />
            <Setter Property="Margin" Value="10 0" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding ClickThru}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="FooterButtonStyle" TargetType="Button" BasedOn="{StaticResource ButtonContentOpacityStyle}">
            <Setter Property="Height" Value="25" />
            <Setter Property="Width" Value="25" />
            <Setter Property="Margin" Value="3" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="FooterButtonHideableStyle" TargetType="Button" BasedOn="{StaticResource FooterButtonStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ToolTip}">
            <Setter Property="Background" Value="#8F000000" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock TextWrapping="Wrap" Text="{Binding}" MaxWidth="600" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border
                            Name="Border"
                            Padding="3"
                            BorderThickness="1"
                            SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="#1fff" />
                                <Setter Property="BorderBrush" Value="White" />
                                <Setter Property="BorderThickness" Value="1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="BackgroundBorderStyle" TargetType="Border" BasedOn="{StaticResource MainBorder}">
            <Setter Property="Opacity" Value="{Binding WindowOpacity}" />
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Color="{Binding BackgroundColor}" />
                </Setter.Value>
            </Setter>
            <Setter Property="BorderBrush">
                <Setter.Value>
                    <SolidColorBrush Color="{Binding BorderColor}" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TopmostBorderStyle" TargetType="Border" BasedOn="{StaticResource BackgroundBorderStyle}">
            <Setter Property="Grid.RowSpan" Value="7" />
            <Setter Property="BorderThickness" Value="1" />
            <!--<Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding UserPaused}" Value="False" />
                                <Condition Binding="{Binding Paused}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="DarkRed" />
                        </MultiDataTrigger>
                    </Style.Triggers>-->
        </Style>
        <Style x:Key="BottomBorderStyle" TargetType="Border" BasedOn="{StaticResource BackgroundBorderStyle}">
            <Setter Property="Grid.Row" Value="7" />
            <Setter Property="Margin" Value="1 -1 1 1" />
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush
                        Color="{Binding BackgroundColor, Converter={nostrum:ColorBrightnessConverter Factor=0.5}}" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RootGridStyle" TargetType="Grid">
            <Setter Property="HorizontalAlignment" Value="Left" />
            <Setter Property="MinWidth" Value="265" />
            <Setter Property="Margin"
                    Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=AllowsTransparency, Converter={StaticResource BoolToMargin}}" />
            <Setter Property="LayoutTransform">
                <Setter.Value>
                    <ScaleTransform CenterX="0" CenterY="0"
                                    ScaleX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=Scale}"
                                    ScaleY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=Scale}" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="EncounterGridStyle" TargetType="Grid">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <DataTemplate x:Key="EncounterDataTemplate" DataType="game:NpcEntity">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Border Width="8" Height="4" CornerRadius="2" VerticalAlignment="Center" Margin="2 0 2 0">
                    <Border.Style>
                        <Style TargetType="Border">
                            <Setter Property="Background" Value="Coral" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Info.Boss}" Value="False">
                                    <Setter Property="Background" Value="DeepSkyBlue" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Info.Name}"
                                             Value="{x:Static l:LP.TotalEncounter}">
                                    <Setter Property="Background" Value="SlateGray" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>

                    </Border.Style>
                </Border>
                <TextBlock Margin="2 0" Grid.Column="1">
                    <Run Text="{Binding Info.Name, Mode=OneWay}">
                        <Run.Style>
                            <Style TargetType="Run">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Info.Name}"
                                                 Value="{x:Static l:LP.TotalEncounter}">
                                        <Setter Property="FontWeight" Value="DemiBold" />
                                        <Setter Property="Foreground" Value="#888" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Run.Style>
                    </Run>
                    <Run Foreground="#888" Text="{Binding Info.Area, Mode=OneWay}" />
                </TextBlock>
            </Grid>

        </DataTemplate>
    </Window.Resources>
    <Grid Style="{StaticResource RootGridStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Border Style="{StaticResource BottomBorderStyle}" />
        <Border Style="{StaticResource TopmostBorderStyle}" />

        <!--Encounter-->
        <Grid Name="EGrid" Style="{StaticResource EncounterGridStyle}">
            <ComboBox x:Name="ListEncounter"
                      Grid.Column="0"
                      HorizontalAlignment="Stretch" VerticalAlignment="Top"
                      HorizontalContentAlignment="Left"
                      Margin="0"
                      MinHeight="29" Height="5"
                      MinWidth="205" Width="Auto"
                      ui:ComboBoxBehavior.FixWin10HilightBug="True"
                      ItemsSource="{Binding Encounters}"
                      SelectedItem="{Binding SelectedEncounter}"
                      ItemTemplate="{StaticResource EncounterDataTemplate}"
                      DropDownClosed="ListEncounter_OnDropDownClosed"
                      DropDownOpened="ListEncounter_OnDropDownOpened"
                      SelectionChanged="ListEncounter_OnSelectionChanged"
                      PreviewKeyDown="ListEncounterOnPreviewKeyDown" />
        </Grid>

        <!--General stats-->
        <Grid Grid.Row="1" Name="SGrid"
              HorizontalAlignment="Stretch"
              Height="Auto">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="0" Style="{StaticResource ButtonMainStyle}"
                    Command="{Binding ChangeTimeLeftCommand}"
                    Margin="1 0 5 0"
                    HorizontalContentAlignment="Left"
                    HorizontalAlignment="Left"
                    VerticalContentAlignment="Center">
                <TextBlock x:Name="Timer"
                           Style="{StaticResource GeneralStatTextStyle}">
                    <Path Data="{StaticResource Svg.Timer}" Width="16" Height="16">
                        <Path.Style>
                            <Style TargetType="Path" BasedOn="{StaticResource GeneralStatPathStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ShowTimeLeft}" Value="True">
                                        <Setter Property="Fill" Value="Coral" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                    <Run Text="{Binding TimerText, Mode=OneWay}" />
                </TextBlock>
            </Button>
            <TextBlock x:Name="PartyDps"
                       Grid.Column="1"
                       Style="{StaticResource GeneralStatTextStyle}">
                <Path Data="{StaticResource Svg.Sword}"
                      Style="{StaticResource GeneralStatPathStyle}" />
                <Run Text="{Binding TotalDpsText, Mode=OneWay}" />
            </TextBlock>
            <TextBlock x:Name="TotalDamage"
                       Grid.Column="2"
                       Style="{StaticResource GeneralStatTextStyle}">
                <Path Data="{StaticResource Svg.HeartHalfFull}"
                      Style="{StaticResource GeneralStatPathStyle}" />
                <Run Text="{Binding TotalDamageText, Mode=OneWay}" />
            </TextBlock>
            <Grid Grid.Column="2" Margin="5 0">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding LoadWarning}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Ellipse Stroke="#2fff"
                         HorizontalAlignment="Right"
                         Width="16" Height="16"
                         Fill="#1aaa" />
                <hud:Arc Width="16" Height="16" StartAngle="0"
                         Stretch="None" EndAngle="{Binding QueuedPackets, Converter={StaticResource LoadToAngle}}"
                         StrokeThickness="1" Stroke="{Binding QueuedPackets, Converter={StaticResource LoadToColor}}"
                         HorizontalAlignment="Right" />

                <TextBlock Margin="0 -1 6 0" HorizontalAlignment="Right"
                           VerticalAlignment="Center" FontWeight="Black"
                           x:Name="QueuedPacketsLed" FontSize="11"
                           Foreground="{Binding QueuedPackets, Converter={StaticResource LoadToColor}}"
                           ToolTip="Overload indicator. When red, notification functions will be temporarily disabled"
                           Text="!" />

            </Grid>

            <windows:SvgLed IsOn="{Binding ClickThru}"
                            ToolTip="Click through"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Grid.Column="2"
                            OnGeometry="{StaticResource Svg.MouseOff}"
                            OffGeometry="{StaticResource Svg.MouseOn}"
                            OnMargin="0 0 1 0"
                            OffBrush="#0fff"
                            OnBrush="#5fff"
                            Margin="0 1 26 0"
                            Height="10"
                            Width="10" />
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HideGeneralData}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsEmpty}" Value="True">
                            <Setter Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>

        <!--Empty mode view-->
        <Grid Grid.RowSpan="2" VerticalAlignment="Stretch">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsEmpty}" Value="False">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <TextBlock HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Foreground="#9fff"
                       TextAlignment="Left"
                       Margin="20 0">
                <Run FontSize="16" Text="Shinra Meter" />
                <LineBreak />
                <windows:SvgLed IsOn="{Binding Connected}"
                                VerticalAlignment="Center"
                                OnGeometry="{StaticResource Svg.WifiOn}"
                                OffGeometry="{StaticResource Svg.WifiOff}"
                                OnBrush="LightSeaGreen"
                                OffBrush="#5fff"
                                OffMargin="0 1 0 0"
                                OnMargin="0 1 0 -1"
                                Margin="0 1 0 -1"
                                Height="14"
                                Width="14" />
                <Run FontSize="12" Text="{Binding ConnectionStatusText, Mode=OneWay}" Foreground="#5fff"
                     BaselineAlignment="Center" />
            </TextBlock>

            <Button HorizontalAlignment="Right"
                    Command="{Binding VerifyCloseCommand}"
                    Style="{StaticResource EmptyModeButtonStyle}">
                <Path Style="{StaticResource EmptyModeButtonPathStyle}"
                      Data="{StaticResource Svg.Power}"
                      Fill="{StaticResource LightRed}" />
            </Button>
            <Button Margin="50 0"
                    HorizontalAlignment="Right"
                    Command="{Binding OpenSettingsCommand}"
                    Style="{StaticResource EmptyModeButtonStyle}">
                <Path Style="{StaticResource EmptyModeButtonPathStyle}"
                      Data="{StaticResource Svg.Settings}"
                      Fill="#9fff" />
            </Button>

            <windows:SvgLed IsOn="{Binding ClickThru}"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            OnGeometry="{StaticResource Svg.MouseOff}"
                            OnBrush="LightSlateGray"
                            Margin="20 0"
                            Height="18"
                            Width="18" />
        </Grid>

        <!--Players-->
        <ScrollViewer x:Name="Scroller"
                      Grid.Row="2"
                      VerticalScrollBarVisibility="Auto"
                      Margin="1"
                      MaxHeight="{Binding NumberOfPlayersDisplayed, Converter={StaticResource PlayersCountToSize}}">
            <ItemsControl Name="PlayersIC"
                          ItemsSource="{Binding PlayersView}"
                          Background="Transparent"
                          BorderThickness="0"
                          Focusable="False"
                          IsTextSearchEnabled="False"
                          HorizontalAlignment="Stretch"
                          Grid.IsSharedSizeScope="True">
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="ui:PlayerDamageViewModel">
                        <ui:PlayerStatsControl />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <!--Messages-->
        <TextBlock Grid.Row="3" Margin="10 5" HorizontalAlignment="Stretch" TextWrapping="Wrap" TextAlignment="Center"
                   Name="TooSlow"
                   Background="Transparent" Foreground="Yellow"
                   Text="{x:Static l:LP.Your_computer_is_too_slow}">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Paused}" Value="True" />
                                <Condition Binding="{Binding UserPaused}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <TextBlock Grid.Row="4" Margin="10 5" HorizontalAlignment="Stretch" TextWrapping="Wrap" TextAlignment="Center"
                   Name="WaitingMapChange"
                   Background="Transparent" Foreground="{StaticResource LightRed}" Text="{x:Static l:LP.WaitingMapChange}"
                   FontWeight="DemiBold">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding WaitingMapChangeTBVisibile}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <TextBlock Grid.Row="5" Margin="10 5" HorizontalAlignment="Stretch" TextWrapping="Wrap" TextAlignment="Center"
                   Name="UserPaused"
                   Background="Transparent">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding UserPaused}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
            <Run Text="{x:Static l:LP.UserPaused}" Foreground="#aaa" />
            <LineBreak />
            <Run FontWeight="DemiBold" Foreground="{StaticResource LightRed}" Text="Change map or relog after resuming meter" />
        </TextBlock>

        <!--Graph-->
        <Grid Grid.Row="6" x:Name="GraphContainer">
            <Grid.Style>
                <Style TargetType="FrameworkElement">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsGraphVisible}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <controls:RealtimeGraph x:Name="Graph"
                                    MouseEnter="OnGraphMouseEnter"
                                    MouseLeave="OnGraphMouseLeave"
                                    DataContext="{Binding GraphData}" />
        </Grid>

        <!--Footer-->
        <UniformGrid Rows="1" Grid.Row="7" Name="Footer" Height="0" Margin="0">

            <!--Blur button-->
            <ToggleButton x:Name="HideNames"
                          ToolTip="{x:Static l:LP.Blur_player_names}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Style="{StaticResource ToggleButtonStyle}"
                          IsChecked="{Binding BlurPlayerNames}"
                          Height="25"
                          Margin="0 3 3 3">
                <Path Style="{StaticResource PathBaseStyle}"
                      Data="{StaticResource Svg.HideNames}"
                      Margin="6" />
            </ToggleButton>
            <!--Adds button-->
            <Button Command="{Binding ToggleAddsCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource FooterButtonStyle}" TargetType="Button">
                        <Setter Property="ToolTip" Value="{x:Static l:LP.MainWindow_Only_boss}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShowAdds}" Value="True">
                                <Setter Property="ToolTip" Value="{x:Static l:LP.MainWindow_Boss_Adds}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <windows:SvgLed IsOn="{Binding ShowAdds}"
                                Style="{StaticResource FooterButtonSvgLedStyle}"
                                OnGeometry="{StaticResource Svg.ShowAdds}"
                                OffGeometry="{StaticResource Svg.OnlyBoss}" />
            </Button>
            <!--Stats button-->
            <Button Command="{Binding ShowEntityStatsCommand}">
                <Button.Style>
                    <Style BasedOn="{StaticResource FooterButtonHideableStyle}" TargetType="Button">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedEncounter.Info.Name}"
                                         Value="{x:Static l:LP.TotalEncounter}">
                                <Setter Property="IsEnabled" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Path Style="{StaticResource FooterButtonPathStyle}"
                      Data="{StaticResource Svg.EntityStats}" />
            </Button>
            <!--<windows:FooterButton Command="{Binding ShowUploadHistoryCommand}"
                                  Margin="3"
                                  Height="25"
                                  ToolTip="{x:Static l:LP.SystemTray_Site_export}"
                                  Style="{StaticResource ButtonMainStyle}"
                                  SvgIcon="{StaticResource Svg.History}" />-->
            <!--<windows:FooterButton Command="{Binding ShowBossHPBarCommand}"
                                  ToolTip="{x:Static l:LP.BossHP}"
                                  Margin="3"
                                  Height="25"
                                  Style="{StaticResource ButtonMainStyle}"
                                  SvgIcon="{StaticResource Svg.HPBar}" />-->

            <!--Settings button-->
            <Button Command="{Binding OpenSettingsCommand}" Style="{StaticResource FooterButtonHideableStyle}">
                <Path Style="{StaticResource FooterButtonPathStyle}"
                      Data="{StaticResource Svg.Settings}" />
            </Button>

            <!--Pause button-->
            <Button Command="{Binding TogglePauseCommand}"
                    Style="{StaticResource FooterButtonStyle}">
                <windows:SvgLed IsOn="{Binding UserPaused}"
                                OnGeometry="{StaticResource Svg.Play}"
                                OffGeometry="{StaticResource Svg.Pause}"
                                Style="{StaticResource FooterButtonSvgLedStyle}" />
            </Button>

            <!--Close button-->
            <Button Command="{Binding VerifyCloseCommand}" Style="{StaticResource FooterButtonHideableStyle}">
                <Path Style="{StaticResource FooterButtonPathStyle}"
                      Data="{StaticResource Svg.Power}"
                      Fill="{StaticResource LightRed}"
                      Margin="3 3 5 3" />
            </Button>
        </UniformGrid>
        <windows:ToastControl DataContext="{Binding ToastData}"
                              Effect="{StaticResource BarShadow-4dp}"
                              Grid.RowSpan="3"
                              VerticalAlignment="Center"
                              Padding="10 0"
                              CornerRadius="5"
                              HorizontalAlignment="Stretch"
                              MaxWidth="230"
                              ToastSeverity="{Binding Severity}"
                              IsShowed="{Binding Visible}"
                              Foreground="White"
                              FontWeight="DemiBold"
                              FontSize="14"
                              SlideOffset="-5"
                              IsHitTestVisible="False"
                              ToastText="{Binding Text}" />
    </Grid>
</ui:ClickThrouWindow>