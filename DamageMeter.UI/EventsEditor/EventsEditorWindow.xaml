<Window x:Class="DamageMeter.UI.EventsEditor.EventsEditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ui="clr-namespace:DamageMeter.UI"
        xmlns:soundElements="clr-namespace:Data.Actions.Notify.SoundElements;assembly=Data"
        xmlns:abnormality="clr-namespace:Data.Events.Abnormality;assembly=Data"
        xmlns:data="clr-namespace:Data;assembly=Data"
        xmlns:converters="clr-namespace:Nostrum.Converters;assembly=Nostrum"
        xmlns:settings="clr-namespace:TCC.UI.Controls.Settings"
        xmlns:windows="clr-namespace:DamageMeter.UI.Windows"
        xmlns:extensions="clr-namespace:Nostrum.Extensions;assembly=Nostrum"
        mc:Ignorable="d"
        SizeToContent="Width"
        Background="{StaticResource MainBgBrush}"
        Title="EventsEditorWindow" Height="600" Width="800" d:DataContext="{d:DesignInstance ui:EventsEditorViewModel}">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0"
                      ResizeBorderThickness="0"
                      GlassFrameThickness="0 0 0 1"
                      CornerRadius="0" />
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyFocusVisual}" />
            <Setter Property="settings:CheckBoxExtensions.Size"
                    Value="{Binding CheckboxSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=settings:CheckboxSetting}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Cursor="Hand">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    CornerRadius="1">
                                <Grid x:Name="markGrid"
                                      Width="{TemplateBinding settings:CheckBoxExtensions.Size}"
                                      Height="{TemplateBinding settings:CheckBoxExtensions.Size}">
                                    <Path x:Name="base"
                                          Data="M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z"
                                          Stretch="Uniform"
                                          Width="{TemplateBinding settings:CheckBoxExtensions.Size}"
                                          Height="{TemplateBinding settings:CheckBoxExtensions.Size}"
                                          Margin="0" />
                                    <Path x:Name="optionMark"
                                          Width="{TemplateBinding settings:CheckBoxExtensions.Size}"
                                          Height="{TemplateBinding settings:CheckBoxExtensions.Size}"
                                          Data="M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z"
                                          Fill="{TemplateBinding BorderBrush}" Margin="0" Opacity="0"
                                          Stretch="Uniform" />
                                    <Rectangle x:Name="indeterminateMark"

                                               Fill="Black" Margin="2" Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyFocusVisual}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="Transparent" />
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="SlateGray" />
                                <Setter Property="Fill" TargetName="optionMark" Value="SlateGray" />
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="SlateGray" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="SlateGray" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <!--<Setter Property="Opacity" TargetName="optionMark" Value="1" />-->
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
                                <Setter Property="Fill" TargetName="base"
                                        Value="{Binding ElementName=optionMark, Path=Fill}" />

                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="optionMark"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0:0:0.2"
                                                             To="1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="optionMark"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0:0:0.2"
                                                             To="0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0" />
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1" />
                                <Setter Property="Fill" TargetName="base" Value="LightSlateGray" />

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Separator">
            <Setter Property="Background" Value="#2fff" />
            <Setter Property="Margin" Value="10 0" />
        </Style>
        <Style TargetType="settings:FieldSetting" BasedOn="{StaticResource {x:Type settings:FieldSetting}}">
            <Setter Property="Height" Value="26" />
        </Style>
        <Style TargetType="settings:SelectionSetting" BasedOn="{StaticResource {x:Type settings:SelectionSetting}}">
            <Setter Property="Height" Value="26" />
        </Style>
        <Style TargetType="settings:CheckboxSetting" BasedOn="{StaticResource {x:Type settings:CheckboxSetting}}">
            <Setter Property="Height" Value="26" />
            <Setter Property="Margin" Value="32 0 0 0" />
            <Setter Property="CheckboxSize" Value="14" />
            <Setter Property="CheckBoxColor">
                <Setter.Value>
                    <SolidColorBrush x:Name="cb" Color="{x:Static ui:EventsEditorViewModel.SelfColor}" />
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="settings:ValueSetting" BasedOn="{StaticResource {x:Type settings:ValueSetting}}">
            <Setter Property="Height" Value="26" />
            <Setter Property="SliderColor1">
                <Setter.Value>
                    <SolidColorBrush x:Name="c1" Color="{x:Static ui:EventsEditorViewModel.SelfColor}" Opacity=".8" />
                </Setter.Value>
            </Setter>
            <Setter Property="SliderColor2">
                <Setter.Value>
                    <SolidColorBrush x:Name="c2" Color="{x:Static ui:EventsEditorViewModel.SelfColor}" />
                </Setter.Value>
            </Setter>
        </Style>

        <DataTemplate x:Key="MusicTemplate" DataType="{x:Type ui:MusicDataVM}">
            <StackPanel>
                <settings:FieldSetting SettingName="File" Value="{Binding File, Mode=TwoWay}" />
                <settings:ValueSetting SettingName="Volume" Value="{Binding Volume, Mode=TwoWay}" Min="0" Max="100" />
                <settings:ValueSetting SettingName="Duration (ms)" Value="{Binding Duration, Mode=TwoWay}" Max="120000"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="BeepsTemplate" DataType="{x:Type ui:BeepsDataVM}">
            <StackPanel>
                <ItemsControl ItemsSource="{Binding Beeps}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate DataType="{x:Type ui:BeepVM}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                    <settings:ValueSetting SettingName="Frequency" Value="{Binding Frequency, Mode=TwoWay}"
                                                       Min="0" Max="20000" 
                                                       TextWidth="40"
                                                       SliderWidth="50"
                                                       Grid.Column="1"/>
                                    <settings:ValueSetting SettingName="Duration (ms)" Value="{Binding Duration, Mode=TwoWay}"
                                                       Min="1" Max="10000" Margin="0 0 -10 0" SliderWidth="50" TextWidth="40"/>

                                <Button Style="{StaticResource ButtonMainStyle}" 
                                        HorizontalAlignment="Center" extensions:ButtonExtensions.CornerRadius="18" 
                                        Grid.Column="2" Width="18" Height="18" Padding="5"
                                        Command="{Binding DeleteBeepCommand}">
                                    <Path Data="{StaticResource Svg.Close}" Fill="#f55" Stretch="Uniform"/>
                                </Button>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <Button Style="{StaticResource ButtonMainStyle}" Command="{Binding AddBeepCommand}" HorizontalAlignment="Center" Padding="8 6" extensions:ButtonExtensions.CornerRadius="15">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Path Data="{StaticResource Svg.Plus}" Fill="White" Stretch="Uniform"
                              Margin="0 0 6 0" />
                        <TextBlock Grid.Column="1" Text="Add beep" VerticalAlignment="Center" />
                    </Grid>
                </Button>
                <!--<Button Style="{StaticResource ButtonMainStyle}" HorizontalAlignment="Center" Padding="8 6">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Path Data="{StaticResource Svg.Play}" Fill="White" Stretch="Uniform"
                              Margin="0 0 6 0 " />
                        <TextBlock Grid.Column="1" Text="Preview" VerticalAlignment="Center" />
                    </Grid>
                </Button>-->
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="TtsTemplate" DataType="ui:TtsDataVM">
            <StackPanel>
                <settings:FieldSetting SettingName="Text" Value="{Binding Text, Mode=TwoWay}" Margin="0" />
                <UniformGrid Columns="2" HorizontalAlignment="Left">
                    <settings:ValueSetting SettingName="Volume" Value="{Binding Volume, Mode=TwoWay}" Min="0"
                                           Max="100" />
                    <settings:SelectionSetting SettingName="Gender" SelectedItem="{Binding Gender, Mode=TwoWay}"
                                               Choices="{x:Static ui:EventsEditorViewModel.Genders}"
                                               ChoicesType="{x:Type soundElements:VoiceGender}" />
                    <settings:ValueSetting SettingName="Speed" Value="{Binding Rate, Mode=TwoWay}" Min="-10"
                                           Max="10" />
                    <settings:SelectionSetting SettingName="Age" SelectedItem="{Binding Age, Mode=TwoWay}"
                                               Choices="{x:Static ui:EventsEditorViewModel.Ages}"
                                               ChoicesType="{x:Type soundElements:VoiceAge}" />
                    <settings:FieldSetting SettingName="Culture" Value="{Binding Culture, Mode=TwoWay}" />
                    <settings:ValueSetting SettingName="Index" Value="{Binding VoiceIndex, Mode=TwoWay}"
                                           UseSpinner="True"
                                           UseMin="True" UseMax="False" Min="0" />
                </UniformGrid>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="AbnormalityTemplate" DataType="ui:AbnormalityEventViewModel">
            <StackPanel>
                <UniformGrid HorizontalAlignment="Left" Columns="2" IsEnabled="{Binding Active}">
                    <settings:SelectionSetting SettingName="Target"
                                               SelectedItem="{Binding Target, Mode=TwoWay}"
                                               ChoicesType="{x:Type abnormality:AbnormalityTargetType}"
                                               Choices="{x:Static ui:EventsEditorViewModel.TargetTypes}" />
                    <settings:ValueSetting SettingName="Seconds before trigger"
                                           Value="{Binding SecondsBeforeTrigger, Mode=TwoWay}" Min="0"
                                           UseMin="True" UseSpinner="True" />
                    <settings:SelectionSetting SettingName="Trigger"
                                               SelectedItem="{Binding Trigger, Mode=TwoWay}"
                                               ChoicesType="{x:Type abnormality:AbnormalityTriggerType}"
                                               Choices="{x:Static ui:EventsEditorViewModel.TriggerTypes}" />
                    <settings:ValueSetting SettingName="Rewarn timeout" Value="{Binding RewarnTimeout, Mode=TwoWay}"
                                           Min="0"
                                           UseMin="True" UseSpinner="True" />
                </UniformGrid>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="CooldownTemplate" DataType="ui:CooldownEventViewModel">
            <StackPanel IsEnabled="{Binding Active}" Orientation="Horizontal" HorizontalAlignment="Left">
                    <settings:ValueSetting SettingName="Skill id" MinWidth="200" Value="{Binding SkillId, Mode=TwoWay}"
                                           Min="0" UseMin="True" UseSpinner="True" />
                    <settings:CheckboxSetting SettingName="Reset only"
                                              IsOn="{Binding ResetOnly, Mode=TwoWay}" />
                </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="AfkTemplate" >
            <TextBlock Foreground="#2fff" HorizontalAlignment="Center" Margin="0 3" Text="No specific settings for this event type"></TextBlock>
        </DataTemplate>

        <ui:SoundTemplateSelector x:Key="SoundTemplateSelector"
                                  MusicDataTemplate="{StaticResource MusicTemplate}"
                                  BeepsDataTemplate="{StaticResource BeepsTemplate}"
                                  TtsDataTemplate="{StaticResource TtsTemplate}" />
        <ui:EventTemplateSelector x:Key="EventTemplateSelector"
                                  AbnormalityDataTemplate="{StaticResource AbnormalityTemplate}"
                                  CooldownDataTemplate="{StaticResource CooldownTemplate}"
                                  AfkDataTemplate="{StaticResource AfkTemplate}" />

        <DataTemplate x:Key="ActionTemplate" DataType="ui:ActionVM">
            <StackPanel>
                <StackPanel Orientation="Horizontal" Margin="10 0">
                    <Path Data="{StaticResource Svg.ChatBox}" Width="12" Height="12"
                                                          Stretch="Uniform"
                                                          Fill="White" Margin="0 1 5 0">
                        <Path.Style>
                            <Style TargetType="Path">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=(UIElement.IsEnabled), RelativeSource={RelativeSource Self}}"
                                                 Value="False">
                                        <Setter Property="Opacity" Value=".3" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>
                    </Path>
                    <settings:CheckboxSetting SettingName="Notification"
                                                                              CheckboxSize="8"
                                                                              SwapCheckboxPosition="False"
                                                                              IsOn="{Binding HasBalloon, Mode=TwoWay}"
                                                                              Margin="0 0 0 0"
                                                                              Foreground="#2fff"
                                                                              HorizontalAlignment="Left" />
                </StackPanel>

                <Grid Visibility="{Binding HasBalloon, Converter={converters:BoolToVisibility}}">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Rectangle Grid.RowSpan="4"
                                                               Width="4"
                                                               RadiusX="2"
                                                               RadiusY="2"
                                                               Fill="#1fff"
                                                               Height="Auto"
                                                               VerticalAlignment="Stretch"
                                                               HorizontalAlignment="Left"
                                                               Margin="14 0 14 4" />
                    <settings:FieldSetting SettingName="Title"
                                                                           Value="{Binding BalloonTitle, Mode=TwoWay}" />
                    <settings:FieldSetting SettingName="Body"
                                                                           Value="{Binding BalloonText, Mode=TwoWay}"
                                                                           Grid.Row="1" />
                    <settings:ValueSetting SettingName="Display time (ms)"
                                                                           Value="{Binding BalloonDisplayTime, Mode=TwoWay}"
                                                                           Max="30000"
                                                                           Grid.Row="2" />
                    <settings:SelectionSetting SettingName="Event type"
                                                                               SelectedItem="{Binding EventType, Mode=TwoWay}"
                                                                               ChoicesType="{x:Type data:EventType}"
                                                                               Choices="{x:Static ui:EventsEditorViewModel.EventTypes}"
                                                                               Grid.Row="3" />

                </Grid>
                <Separator Width="Auto" Margin="-5 2" Opacity=".5" />
                <StackPanel Orientation="Horizontal" Background="Transparent"
                                                            Margin="10 2 0 0" HorizontalAlignment="Left"
                                                            VerticalAlignment="Center">
                    <Path Data="{StaticResource Svg.Sound}" Width="12" Height="12"
                                                          Stretch="Uniform"
                                                          Fill="White" Margin="0 1 10 0">
                        <Path.Style>
                            <Style TargetType="Path">
                                <Style.Triggers>
                                    <DataTrigger
                                                                        Binding="{Binding Path=(UIElement.IsEnabled), RelativeSource={RelativeSource Self}}"
                                                                        Value="False">
                                        <Setter Property="Opacity" Value=".3" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Path.Style>

                    </Path>
                    <TextBlock Text="Sound - " Foreground="#9fff"
                                                               HorizontalAlignment="Center"
                                                               VerticalAlignment="Center">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger
                                                                        Binding="{Binding Path=(UIElement.IsEnabled), RelativeSource={RelativeSource Self}}"
                                                                        Value="False">
                                        <Setter Property="Opacity" Value=".3" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>

                    </TextBlock>
                    <ComboBox SelectedItem="{Binding SoundType, Mode=TwoWay}"
                                                              HorizontalAlignment="Left"
                                                              FontWeight="DemiBold"
                                                              MinWidth="0"
                                                              Margin="-4 0 0 0" VerticalAlignment="Center"
                                                              ItemsSource="{x:Static ui:EventsEditorViewModel.SoundTypes}" />

                </StackPanel>
                <Grid Margin="0 0 0 0" Background="Transparent">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Rectangle Grid.RowSpan="4"
                                                               Width="4"
                                                               RadiusX="2"
                                                               RadiusY="2"
                                                               Fill="#1fff"
                                                               Height="Auto"
                                                               VerticalAlignment="Stretch"
                                                               HorizontalAlignment="Left"
                                                               Margin="14 0 14 4" />
                    <ContentControl Content="{Binding SoundData}"
                                                                    Margin="0 0 0 2"
                                                                    ContentTemplateSelector="{StaticResource SoundTemplateSelector}" />
                </Grid>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="EventTemplate" DataType="ui:BaseEventViewModel">
            <Border Margin="5" Padding="5 5 5 0" BorderThickness="1"
                                CornerRadius="5"
                                BorderBrush="#2fff"
                                Background="{StaticResource MainBgDarkBrush}">
                <Border.Effect>
                    <DropShadowEffect Direction="-90" BlurRadius="10" Opacity=".2" />
                </Border.Effect>
                <StackPanel HorizontalAlignment="Stretch">
                    <Border Background="#1fff" Margin="-5 -5 -5 0" CornerRadius="5 5 0 0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel.Resources>
                                    <Style TargetType="ToggleButton"
                                                       BasedOn="{StaticResource ToggleButtonStyle}">
                                        <Setter Property="Width" Value="24" />
                                        <Setter Property="Height" Value="24" />
                                        <Setter Property="Padding" Value="0" />
                                        <Setter Property="Margin" Value="4" />
                                    </Style>
                                    <Style TargetType="Path">
                                        <Setter Property="Fill" Value="White" />
                                        <Setter Property="Stretch" Value="Uniform" />
                                        <Setter Property="Width" Value="14" />
                                        <Setter Property="Height" Value="14" />
                                        <Setter Property="Margin" Value="0" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                    </Style>
                                </StackPanel.Resources>
                                <ToggleButton IsChecked="{Binding Active, Mode=TwoWay}"
                                                          ToolTip="Toggle">
                                    <Path Data="{StaticResource Svg.Power}" Width="13" Height="13" Margin="0 0 0 1">
                                        <Path.Fill>
                                            <SolidColorBrush Color="{x:Static ui:EventsEditorViewModel.SelfColor}"/>
                                        </Path.Fill>
                                    </Path>
                                </ToggleButton>
                                <ToggleButton IsChecked="{Binding OutOfCombat, Mode=TwoWay}"
                                                          ToolTip="Out of combat"
                                                          IsEnabled="{Binding Active}">
                                    <Grid>
                                        <Path Data="{StaticResource Svg.Sword}" />
                                        <Line Stroke="#f55" X1="0" Y1="0" X2="1" Y2="-1"
                                                          Margin="5"
                                                          Stretch="Fill"
                                                          StrokeEndLineCap="Round" StrokeStartLineCap="Round"
                                                          StrokeThickness="2" />
                                    </Grid>
                                </ToggleButton>
                                <ToggleButton IsChecked="{Binding InGame, Mode=TwoWay}"
                                                          ToolTip="In game"
                                                          IsEnabled="{Binding Active}">
                                    <Path Data="{StaticResource Svg.Gamepad}" />
                                </ToggleButton>
                            </StackPanel>

                            <!--<ItemsControl ItemsSource="{Binding BlacklistedClasses}"
                                                      IsEnabled="{Binding Active}" />
                                        <ItemsControl ItemsSource="{Binding BlacklistedBosses}"
                                                      IsEnabled="{Binding Active}" />-->
                            <TextBlock VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   Grid.Column="0" Grid.ColumnSpan="3"
                                                   Margin="0"
                                                   Foreground="#9fff" Text="{Binding Type}" />
                            <settings:ValueSetting SettingName="Priority"
                                                               Grid.Column="2"
                                                               Value="{Binding Priority, Mode=TwoWay}"
                                                               UseSpinner="True"
                                                               UseMin="True" Min="0"
                                                               IsEnabled="{Binding Active}" />
                        </Grid>
                    </Border>
                    <ContentControl Content="{Binding}" 
                                                Margin="0 2 0 0"
                                                ContentTemplateSelector="{StaticResource EventTemplateSelector}" />
                    <Separator Width="Auto" Margin="-5 2" Opacity=".5" />

                    <ItemsControl ItemsSource="{Binding Actions}" IsEnabled="{Binding Active}" Margin="0" ItemTemplate="{StaticResource ActionTemplate}"/>
                </StackPanel>
            </Border>
        </DataTemplate>
    </Window.Resources>
    <Grid>
        <!-- Title bar -->
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid Background="#1000" MouseDown="Drag">
            <Path Data="{StaticResource Svg.Events}"
                  Style="{StaticResource SmallButtonPathStyle}"
                  HorizontalAlignment="Left"
                  Opacity=".3"
                  Height="14"
                  Margin="13 0" />
            <Rectangle Width="1" Margin="40 5" Fill="#1fff" HorizontalAlignment="Left" />
            <TextBlock Text="Shinra Meter settings - Events editor"
                       Foreground="#6fff"
                       VerticalAlignment="Center"
                       HorizontalAlignment="Left"
                       Margin="50 0" />
            <Button HorizontalAlignment="Right"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Style="{StaticResource ButtonMainStyle}"
                    Cursor="Arrow"
                    Height="30"
                    Width="30"
                    Click="CloseWindow">
                <Path Data="{StaticResource Svg.Close}"
                      Fill="{StaticResource LightRed}"
                      Stretch="Uniform"
                      Margin="8" />
            </Button>
        </Grid>
        <ScrollViewer Grid.Row="1" Margin="5 5 0 5" UseLayoutRounding="True">
            <ItemsControl HorizontalAlignment="Center" HorizontalContentAlignment="Center"
                          ItemsSource="{Binding CommonEvents}" ScrollViewer.CanContentScroll="False"
                          ItemTemplate="{StaticResource EventTemplate}"/>
        </ScrollViewer>
    </Grid>
</Window>