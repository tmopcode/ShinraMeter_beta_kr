<UserControl x:Class="TCC.UI.Controls.Settings.CheckboxSetting"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:settings="clr-namespace:TCC.UI.Controls.Settings"
             mc:Ignorable="d"
             d:DesignHeight="35" d:DesignWidth="300">
    <UserControl.Resources>
        <Style TargetType="{x:Type CheckBox}" >
            <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyFocusVisual}" />
            <Setter Property="settings:CheckBoxExtensions.Size" Value="{Binding CheckboxSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=settings:CheckboxSetting}}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="2" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True" Cursor="Hand">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder" BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    CornerRadius="1">
                                <Grid x:Name="markGrid"
                                      Width="{TemplateBinding settings:CheckBoxExtensions.Size}"
                                      Height="{TemplateBinding settings:CheckBoxExtensions.Size}">
                                    <Path x:Name="base"
                                          Data="M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3M19,5V19H5V5H19Z"
                                          Stretch="Uniform"
                                          Width="{TemplateBinding settings:CheckBoxExtensions.Size}"
                                          Height="{TemplateBinding settings:CheckBoxExtensions.Size}"
                                          Margin="0" />
                                    <Path x:Name="optionMark"
                                          Width="{TemplateBinding settings:CheckBoxExtensions.Size}"
                                          Height="{TemplateBinding settings:CheckBoxExtensions.Size}"
                                          Data="M10,17L5,12L6.41,10.58L10,14.17L17.59,6.58L19,8M19,3H5C3.89,3 3,3.89 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5C21,3.89 20.1,3 19,3Z"
                                          Fill="{TemplateBinding BorderBrush}" Margin="0" Opacity="0"
                                          Stretch="Uniform" />
                                    <Rectangle x:Name="indeterminateMark"

                                               Fill="Black" Margin="2" Opacity="0" />
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Content="{TemplateBinding Content}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent" Value="true">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource EmptyFocusVisual}" />
                                <Setter Property="Padding" Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="checkBoxBorder" Value="Transparent" />
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="SlateGray" />
                                <Setter Property="Fill" TargetName="optionMark" Value="SlateGray" />
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="SlateGray" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="indeterminateMark" Value="Black" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter Property="BorderBrush" TargetName="checkBoxBorder" Value="SlateGray" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="true">
                                <!--<Setter Property="Opacity" TargetName="optionMark" Value="1" />-->
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="0" />
                                <Setter Property="Fill" TargetName="base"
                                        Value="{Binding ElementName=optionMark, Path=Fill}" />

                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="optionMark"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0:0:0.2"
                                                             To="1" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="optionMark"
                                                             Storyboard.TargetProperty="Opacity"
                                                             Duration="0:0:0.2"
                                                             To="0" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="{x:Null}">
                                <Setter Property="Opacity" TargetName="optionMark" Value="0" />
                                <Setter Property="Opacity" TargetName="indeterminateMark" Value="1" />
                                <Setter Property="Fill" TargetName="base" Value="LightSlateGray" />

                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Grid.Column" Value="0"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding SwapCheckboxPosition, RelativeSource={RelativeSource AncestorType=settings:CheckboxSetting}}" Value="False">
                    <Setter Property="Grid.Column" Value="2"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid VerticalAlignment="Stretch" Cursor="Hand"
          MouseLeftButtonDown="OnMouseButtonDown"
          Style="{StaticResource GlowHoverGrid}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>
        <Path Data="{Binding SvgIcon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=settings:CheckboxSetting}}"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
              Opacity=".7" >
            <Path.Style>
                <Style TargetType="Path">
                            <Setter Property="Margin" Value="7 0"></Setter>
                            <Setter Property="Width" Value="18"></Setter>
                            <Setter Property="Height" Value="18"></Setter>
<Style.Triggers>
                        <DataTrigger Binding="{Binding SvgIcon, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=settings:CheckboxSetting}}" Value="{x:Null}">
                            <Setter Property="Height" Value="0"></Setter>
                            <Setter Property="Width" Value="0"></Setter>
                            <Setter Property="Margin" Value="0"></Setter>
                        </DataTrigger>
</Style.Triggers>
                </Style>
            </Path.Style>
        </Path>
        <!--Foreground="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=settings:CheckboxSetting}}"-->
        <TextBlock Grid.Column="1"
                   Text="{Binding SettingName, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=settings:CheckboxSetting}}"
                   VerticalAlignment="Center"
                   Padding="0"
                   TextAlignment="Left"
                   Opacity=".9" >
            <TextBlock.Style>
                <Style BasedOn="{StaticResource DefaultTextStyle}" TargetType="TextBlock">
                    <Setter Property="Margin" Value="5 0 5 0"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SwapCheckboxPosition, RelativeSource={RelativeSource AncestorType=settings:CheckboxSetting}}" Value="True">

                    <Setter Property="Margin" Value="0 0 0 0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
        </TextBlock>
        <CheckBox x:Name="CheckBox"
                  IsChecked="{Binding IsOn, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=settings:CheckboxSetting}}"
                  BorderBrush="{Binding CheckBoxColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=settings:CheckboxSetting}}"
                  VerticalAlignment="Center"
                  HorizontalAlignment="Center"
                  settings:CheckBoxExtensions.Size="{Binding CheckboxSize, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=settings:CheckboxSetting}}"
                  Margin="7 0" />
    </Grid>
</UserControl>